{% extends 'base.html.twig' %}

{% block title %}Choisissez vos ingrédients{% endblock %}

{% block main %}
<h1 class="new textStyle">Choisissez vos ingrédients</h1>

<div class="searchInput textStyle">
    <label for="genre-select">Filtrer par genre :</label>
    <select id="genre-select">
        <option value="all">Tous</option>
        {% for genre in genres %}
            <option value="{{ genre.id }}">{{ genre.name }}</option>
        {% endfor %}
    </select>
</div>
{{ type }}
<div class="alignRecipes">
    <div class="ingredients-container">
        <form id="ingredients-form" action="{{ path('app_recipes', {'type': type }) }}" method="post">
            <div class="cards-container" id="ingredients-container">
                {% for ingredient in ingredients %}
                 <div class="card" data-genre="{{ ingredient.genre.id }}">
                     <label>
                         <h2>{{ ingredient.name }}</h2>
                        <img src="{{ asset('assets/upload_directory/' ~ ingredient.image) }}" alt="{{ ingredient.name }}" class="ingredient-image">
                        <input type="checkbox" name="ingredients[]" value="{{ ingredient.id }}" class="ingredient-checkbox" style="display: none;">
                    </label>
                </div>
                {% endfor %}
            </div>
            <div class="recipesSubmit">
                <input type="submit" class="button">
            </div>
        </form>
    </div>
    
    {# <div id="selected-ingredients-container">
        <h2 class="textStyle">Panier</h2>
        <ul id="selected-ingredients-list" class="textStyle"></ul>
    </div>
</div> #}

<script>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('ingredients-form');
    const checkboxes = form.querySelectorAll('.ingredient-checkbox');
    const selectedIngredientsContainer = document.getElementById('selected-ingredients-container');
    const selectedIngredientsList = document.getElementById('selected-ingredients-list');
    const genreSelect = document.getElementById('genre-select');
    const ingredientsContainer = document.getElementById('ingredients-container');
    const images = document.querySelectorAll('.ingredient-image');

    // Mise à jour des ingrédients sélectionnés
    function updateSelectedIngredients() {
        selectedIngredientsList.innerHTML = '';
        checkboxes.forEach(checkbox => {
            if (checkbox.checked) {
                const label = checkbox.previousElementSibling.previousElementSibling.textContent; // Trouve le nom de l'ingrédient
                const listItem = document.createElement('h3');
                listItem.textContent = label;
                selectedIngredientsList.appendChild(listItem);
            }
        });
    }

    // Filtrer les ingrédients par genre
    function filterIngredientsByGenre() {
        const selectedGenre = genreSelect.value;
        const cards = ingredientsContainer.querySelectorAll('.card');

        cards.forEach(card => {
            if (selectedGenre === 'all' || card.getAttribute('data-genre') === selectedGenre) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    }

    // Gestion des événements sur les checkboxes
    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', updateSelectedIngredients);
    });

    // Gestion des événements sur le sélecteur de genre
    genreSelect.addEventListener('change', filterIngredientsByGenre);

    // Gestion des événements sur les images
    images.forEach((image, index) => {
        image.addEventListener('click', () => {
            checkboxes[index].checked = !checkboxes[index].checked; // Toggle checkbox
            image.classList.toggle('selected'); // Ajoute ou retire la classe pour le feedback visuel
            updateSelectedIngredients(); // Met à jour la liste des ingrédients sélectionnés
        });
    });

    // Initialisation
    filterIngredientsByGenre();
});

{% endblock %}

